{\rtf1\ansi\deff1\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset128 Liberation Serif{\*\falt Times New Roman};}{\f1\froman\fprq2\fcharset128 Liberation Serif{\*\falt Times New Roman};}{\f2\froman\fprq2\fcharset128 Liberation Serif{\*\falt Times New Roman};}{\f3\fswiss\fprq2\fcharset128 Liberation Sans{\*\falt Arial};}{\f4\fnil\fprq0\fcharset128 OpenSymbol{\*\falt Arial Unicode MS};}{\f5\fmodern\fprq1\fcharset128 DejaVu Sans Mono;}{\f6\fswiss\fprq2\fcharset128 DejaVu Sans;}{\f7\fmodern\fprq1\fcharset128 DejaVu Sans;}}
{\colortbl;\red0\green0\blue0;\red128\green128\blue128;}
{\stylesheet{\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Normal;}
{\s2\sb240\sa120\keepn\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af3\afs28\lang1081\ltrch\dbch\af1\langfe2052\hich\f3\fs28\lang1033\loch\f3\fs28\lang1033\sbasedon1\snext3 Heading;}
{\s3\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon1\snext3 Body Text;}
{\s4\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon3\snext4 List;}
{\s5\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ai\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\i\loch\f1\fs24\lang1033\i\sbasedon1\snext5 caption;}
{\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon1\snext6 Index;}
{\s7\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ai\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\i\loch\f1\fs24\lang1033\i\sbasedon1\snext7 caption;}
{\s8\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ai\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\i\loch\f1\fs24\lang1033\i\sbasedon1\snext8 WW-caption;}
{\*\cs10\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 2 1;}
{\*\cs11\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 2 2;}
{\*\cs12\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 2 3;}
{\*\cs13\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 2 4;}
{\*\cs14\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 2 5;}
{\*\cs15\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 2 6;}
{\*\cs16\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 2 7;}
{\*\cs17\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 2 8;}
{\*\cs18\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 2 9;}
{\*\cs19\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 2 10;}
{\*\cs20\cf0\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 2 1;}
{\*\cs21\cf0\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 2 2;}
{\*\cs22\cf0\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 2 3;}
{\*\cs23\cf0\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 2 4;}
{\*\cs24\cf0\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 2 5;}
{\*\cs25\cf0\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 2 6;}
{\*\cs26\cf0\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 2 7;}
{\*\cs27\cf0\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 2 8;}
{\*\cs28\cf0\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 2 9;}
{\*\cs29\cf0\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 2 10;}
{\*\cs30\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 3 1;}
{\*\cs31\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 3 2;}
{\*\cs32\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 3 3;}
{\*\cs33\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 3 4;}
{\*\cs34\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 3 5;}
{\*\cs35\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 3 6;}
{\*\cs36\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 3 7;}
{\*\cs37\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 3 8;}
{\*\cs38\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 3 9;}
{\*\cs39\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 RTF_Num 3 10;}
{\*\cs40\cf0\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 Numbering Symbols;}
{\*\cs41\cf0\rtlch\af4\afs24\lang1081\ltrch\dbch\af4\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 Bullet Symbols;}
{\*\cs42\cf0\rtlch\af5\afs24\lang1081\ltrch\dbch\af7\langfe2052\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033 Teletype;}
}{\*\listtable{\list\listtemplateid1
{\listlevel\levelnfc4\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'00.;}{\levelnumbers\'01;}\f4\f4\f4\fi-283\li1067}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\f4\f4\f4\fi-283\li1774}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\f4\f4\f4\fi-283\li2481}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\f4\f4\f4\fi-283\li3188}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\f4\f4\f4\fi-283\li3895}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\f4\f4\f4\fi-283\li4602}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\f4\f4\f4\fi-283\li5309}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\f4\f4\f4\fi-283\li6016}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\f4\f4\f4\fi-283\li6723}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\f4\f4\f4\fi-283\li7430}}{\listname RTF_Num 2;}\listid1}
{\list\listtemplateid2
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\f4\f4\f4\fi-360\li720}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f4\f4\f4\f4\fi-360\li1080}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f4\f4\f4\f4\fi-360\li1440}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\f4\f4\f4\fi-360\li1800}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f4\f4\f4\f4\fi-360\li2160}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f4\f4\f4\f4\fi-360\li2520}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\f4\f4\f4\fi-360\li2880}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f4\f4\f4\f4\fi-360\li3240}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f4\f4\f4\f4\fi-360\li3600}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\f4\f4\f4\fi-360\li3960}}{\listname RTF_Num 3;}\listid2}
}{\listoverridetable{\listoverride\listid1\listoverridecount0\ls0}{\listoverride\listid2\listoverridecount0\ls1}}

{\info{\author Edwin Meng}{\creatim\yr2011\mo12\dy16\hr12\min0}{\revtim\yr0\mo0\dy0\hr0\min0}{\printim\yr0\mo0\dy0\hr0\min0}{\comment StarWriter}{\vern3200}}\deftab709
{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Standard;}
{\pgdsc1\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt1 Standard;}}
{\*\pgdscno0}\paperh15840\paperw12240\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pard\plain \ltrpar\s1\cf0\qc{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs36\lang1081\ab\ltrch\dbch\af6\langfe2052\hich\fs36\lang1033\b\loch\fs36\lang1033\b {\rtlch \ltrch\loch\f1\fs36\lang1033\i0\b Optimization with Data Flow Analysis / SSA}
\par \pard\plain \ltrpar\s1\cf0\qc{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 by}{\rtlch \ltrch\dbch\f6\fs21\langfe2052\i0\b0\ltrch\dbch\fs24 \'81\'46}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Shengbin Meng}
\par \pard\plain \ltrpar\s1\cf0\qc{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab {\rtlch\ltrch\hich\fs32\b\loch\fs32\b Introduction}}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab This project implements a compiler that takes 3-address-code as input and can perform data flow analysis and scalar optimizations. With Static Single Assignment (SSA) enabled, it can also build SSA form and perform optimizations on SSA.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab  The input codes, in 3-Address Intermediate Format, are limited to those compiled(by {\rtlch\ltrch\hich\i\loch\i csc}) from a subset of C. The output (back end) can be Control Flow Graph, general C, 3-address code(in or not in SSA form), optimization report. The analysis or optimizat
ions it can perform include: }
\par \pard\plain {\listtext\pard\plain \li360\ri0\lin360\rin0\fi-360\f6\f4\f4\f4 \'95\tab}\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls1\li-360\ri0\lin-360\rin0\fi-360\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 Strongly Connected Region (SCR) analysis; }
\par \pard\plain {\listtext\pard\plain \li360\ri0\lin360\rin0\fi-360\f6\f4\f4\f4 \'95\tab}\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls1\li-360\ri0\lin-360\rin0\fi-360\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 simple constant propagation based on reaching definitions; }
\par \pard\plain {\listtext\pard\plain \li360\ri0\lin360\rin0\fi-360\f6\f4\f4\f4 \'95\tab}\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls1\li-360\ri0\lin-360\rin0\fi-360\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 dead statement elimination based on live variable analysis; }
\par \pard\plain {\listtext\pard\plain \li360\ri0\lin360\rin0\fi-360\f6\f4\f4\f4 \'95\tab}\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls1\li-360\ri0\lin-360\rin0\fi-360\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 SSA based constant propagation; }
\par \pard\plain {\listtext\pard\plain \li360\ri0\lin360\rin0\fi-360\f6\f4\f4\f4 \'95\tab}\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls1\li-360\ri0\lin-360\rin0\fi-360\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 SSA based loop invariant code motion.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab {\rtlch\ltrch\hich\fs32\b\loch\fs32\b Implementation}}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab The project uses c++ as its programming language. It includes several classes, containing in several files, which will  be described in the  following.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab {\rtlch\ltrch\hich\i\b\loch\i\b class Instruction}}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab This class represents an abstract instruction. Its {\rtlch\ltrch\hich\i\loch\i parse }method  accepts a line of instruction string(a line of 3 address code in this case) and interprets it to separate operation and operands. According to the definition of our 3 address code, operation
s and the corresponding operands may have different types and values. This information is analyzed and recorded during parsing.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab {\rtlch\ltrch\hich\i\b\loch\i\b class ThreeAddrCodeParser}}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab This class parses the 3-address-code input into a collection(we use c++ vector in the implementation) of instructions. It simply reads from input stream, and each time gives one line to an instance of{\rtlch\ltrch\hich\i\loch\i  class Instruction} to parse. It keeps the instruction v
ector for further use in the following processing.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab {\rtlch\ltrch\hich\i\b\loch\i\b class CLanguageGenerator}}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\i\loch\i \tab }}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0  This class is used to support C back-end. It generates valid C code and writes it to the output stream. The generation process takes C function as unit. When generating a function's definition, it also writes the function declaration in a header file, wi
th a correct formal parameter list. }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab {\rtlch\ltrch\hich\i\b\loch\i\b class BasicBlock}}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab This class represents a basic block. It contains the block's starting and ending statements, predecessors and successors, data flow information, and so on.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ai\ab\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\i\b\loch\f1\fs24\lang1033\i\b {\rtlch \ltrch\loch\f1\fs24\lang1033\i\b \tab class Procedure}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab This class represents a procedure(or function). It contains the procedure's entry and exit statements, its instructions and basic blocks, data flow information, and so on. Since many analyses and optimizations are performed in the scope of a procedure, th
is class's methods become the main body of the project's work. Most of the implementation is here.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ai\ab\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\i\b\loch\f1\fs24\lang1033\i\b {\rtlch \ltrch\loch\f1\fs24\lang1033\i\b \tab class DataflowAnalyzer}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab This class serves as an interface. It accepts a program's all instructions, split them into procedures(and build the CFG), then call {\rtlch\ltrch\hich\i\loch\i class Procedure }'s methods to do the job. It mainly handles input and output, for example reports and prints stuff.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab More details can be found in source code.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch  }{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab {\rtlch\ltrch\hich\fs32\b\loch\fs32\b Result}}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab The optimizer program should compile and run on regular Linux machines.To do so:}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch  }{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 change to the source code directory, execute ./compile.sh(needs {\rtlch\ltrch\hich\i\loch\i g++}) and ./run.sh.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab As the optimizer itself, run.sh accepts  3-address-code as input. You should specify the -opt and -backend command line arguments before given the input. The i/o streams are default to the stdin/stdout, use redirection if you want to use files.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab Examples have been used to check the implementation.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ai\ab\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\i\b\loch\f1\fs24\lang1033\i\b 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\i\b\loch\i\b \tab Note}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 : command line arguments usage}
\par \pard\plain {\listtext\pard\plain \li784\ri0\lin784\rin0\fi-283\f6\f4\f4\f4 a.\tab}\ilvl0 \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls0\li-283\ri0\lin-283\rin0\fi-283\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f5\fs24\lang1033\i0\b0{\*\cs42\cf0\rtlch\ltrch\dbch\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033\rtlch\ltrch\hich\b\loch\b -opt}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 , a comma separated list of transformations. The transformations you will support are: }
\par \pard\plain {\listtext\pard\plain \li1491\ri0\lin1491\rin0\fi-283\f6\f4\f4\f4 \'95\tab}\ilvl1 \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls0\li-283\ri0\lin-283\rin0\fi-283\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f5\fs24\lang1033\i0\b0{\*\cs42\cf0\rtlch\ltrch\dbch\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033\rtlch\ltrch\hich\b\loch\b scp}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0  (simple constant propagation) }
\par \pard\plain {\listtext\pard\plain \li1491\ri0\lin1491\rin0\fi-283\f6\f4\f4\f4 \'95\tab}\ilvl1 \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls0\li-283\ri0\lin-283\rin0\fi-283\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f5\fs24\lang1033\i0\b0{\*\cs42\cf0\rtlch\ltrch\dbch\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033\rtlch\ltrch\hich\b\loch\b cse}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0  (common subexpression elimination) }
\par \pard\plain {\listtext\pard\plain \li1491\ri0\lin1491\rin0\fi-283\f6\f4\f4\f4 \'95\tab}\ilvl1 \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls0\li-283\ri0\lin-283\rin0\fi-283\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f5\fs24\lang1033\i0\b0{\*\cs42\cf0\rtlch\ltrch\dbch\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033\rtlch\ltrch\hich\b\loch\b licm}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0  (loop invariant code motion) }
\par \pard\plain {\listtext\pard\plain \li1491\ri0\lin1491\rin0\fi-283\f6\f4\f4\f4 \'95\tab}\ilvl1 \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls0\li-283\ri0\lin-283\rin0\fi-283\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f5\fs24\lang1033\i0\b0{\*\cs42\cf0\rtlch\ltrch\dbch\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033\rtlch\ltrch\hich\b\loch\b ssa}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0  (static single assignment) }
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\li0\ri0\lin0\rin0\fi-283\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \tab \tab For example: }
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\li0\ri0\lin0\rin0\fi-283\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f5\fs24\lang1033\i0\b0{\*\cs42\cf0\rtlch\ltrch\dbch\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033\rtlch\ltrch\hich\b\loch\b \tab \tab \tab -opt=ssa,scp}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0  means convert to SSA form and perform constant propagation.}
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\li0\ri0\lin0\rin0\fi-283\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f5\fs24\lang1033\i0\b0{\*\cs42\cf0\rtlch\ltrch\dbch\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033\rtlch\ltrch\hich\b\loch\b \tab \tab \tab -opt=ssa,licm}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0  means convert to SSA form and then perform constant propagation. }
\par \pard\plain {\listtext\pard\plain \li784\ri0\lin784\rin0\fi-283\sa120\f6\f4\f4\f4 b.\tab}\ilvl0 \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls0\li-283\ri0\lin-283\rin0\fi-283\sa120\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033{\rtlch \ltrch\loch\f5\fs24\lang1033\i0\b0{\*\cs42\cf0\rtlch\ltrch\dbch\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033\rtlch\ltrch\hich\b\loch\b -backend}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0  determines which backend to use: {\*\cs42\cf0\rtlch\ltrch\dbch\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033\rtlch\ltrch\hich\b\loch\b c}, {\*\cs42\cf0\rtlch\ltrch\dbch\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033\rtlch\ltrch\hich\b\loch\b cfg}, {\*\cs42\cf0\rtlch\ltrch\dbch\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033\rtlch\ltrch\hich\b\loch\b 3addr}, {\*\cs42\cf0\rtlch\ltrch\dbch\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033\rtlch\ltrch\hich\b\loch\b rep}, and {\*\cs42\cf0\rtlch\ltrch\dbch\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033\rtlch\ltrch\hich\b\loch\b ssa}. If ssa is not specified, generate 3-address code without SSA instructions. For example,\line {\*\cs42\cf0\rtlch\ltrch\dbch\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033\rtlch\ltrch\hich\b\loch\b -backend=ssa,3addr} means to generate 3-address format code in SSA form. }
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sa120\ql\rtlch\af1\afs24\lang1081\ltrch\dbch\af6\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 
\par }